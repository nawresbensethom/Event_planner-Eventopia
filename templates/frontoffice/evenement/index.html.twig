{% extends '/frontoffice/base.html.twig' %}

{% block title %}Événements - Eventopia{% endblock %}

{% block hero %}
<section class="hero module-evenement">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 mx-auto text-center">
                <h1 class="animate-on-scroll">Découvrez nos événements</h1>
                <p class="animate-on-scroll">Participez à des expériences uniques et inoubliables</p>
            </div>
        </div>
    </div>
</section>
{% endblock %}

{% block body %}
<div class="container">
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="input-group">
                <span class="input-group-text"><i class="fas fa-search"></i></span>
                <input type="text" id="searchEvent" class="form-control" placeholder="Rechercher un événement...">
            </div>
        </div>
        <div class="col-md-6">
            <select id="categoryFilter" class="form-select">
                <option value="all">Toutes les catégories</option>
                {% for category in categories %}
                    <option value="{{ category }}" {{ selectedCategory == category ? 'selected' : '' }}>{{ category|capitalize }}</option>
                {% endfor %}
            </select>
        </div>
    </div>

    <div id="evenementsList" class="row">
        {% for evenement in pagination %}
            <div class="col-md-4 mb-4 filterable-item {{ evenement.category }}">
                <div class="card h-100">
                    {% set imageSrc = evenement.image ? '/Uploads/evenements/' ~ evenement.image : '/images/default-event.jpg' %}
                    <img src="{{ asset(imageSrc) }}" class="card-img-top" alt="{{ evenement.getNomEvenement() }}">
                    <div class="card-body">
                        <span class="badge bg-primary mb-2">{{ evenement.category|capitalize }}</span>
                        <h3 class="card-title">{{ evenement.getNomEvenement()|length > 50 ? evenement.getNomEvenement()|slice(0, 50) ~ '...' : evenement.getNomEvenement() }}</h3>
                        <p class="card-text">{{ evenement.getDescription()|length > 100 ? evenement.getDescription()|slice(0, 100) ~ '...' : evenement.getDescription() }}</p>
                        <div class="d-flex justify-content-between align-items-center">
                            <small class="text-muted">
                                <i class="fas fa-calendar-alt me-1"></i>
                                {{ evenement.dateEvenement ? evenement.dateEvenement|date('d/m/Y') : 'Date non spécifiée' }}
                            </small>
                            <small class="text-muted"><i class="fas fa-map-marker-alt me-1"></i> {{ evenement.ville ?: 'Non spécifié' }}</small>
                        </div>
                    </div>
                    <div class="card-footer bg-white border-0 d-flex justify-content-between">
                        <a href="{{ path('app_evenement_show', {'id': evenement.id}) }}" class="btn btn-outline-primary">
                            <i class="fas fa-eye me-1"></i> Détails
                        </a>
                        {% if app.user and evenement.getIdOrganisateur() %}
                            {% if app.user == evenement.getIdOrganisateur() %}
                                <a href="{{ path('app_evenement_edit', {'id': evenement.id}) }}" class="btn btn-primary">
                                    <i class="fas fa-edit me-1"></i> Modifier
                                </a>
                            {% else %}
                                <a href="{{ path('app_reservation_new', {'evenement_id': evenement.id}) }}" class="btn btn-primary">
                                    <i class="fas fa-ticket-alt me-1"></i> Réserver
                                </a>
                            {% endif %}
                        {% endif %}
                    </div>
                </div>
            </div>
        {% else %}
            <div class="col-12">
                <p class="text-center text-muted">Aucun événement trouvé.</p>
            </div>
        {% endfor %}
    </div>

    <div class="d-flex justify-content-center mt-4">
        {{ knp_pagination_render(pagination) }}
    </div>
</div>
{% endblock %}

{% block javascripts %}
<!-- Include jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('searchEvent');
    const categoryFilter = document.getElementById('categoryFilter');
    const evenementsList = document.getElementById('evenementsList');
    const isAuthenticated = {{ app.user ? 'true' : 'false' }};
    const userId = {{ app.user ? app.user.id : 'null' }};
    const defaultImage = '{{ asset('/images/default-event.jpg') }}';
    const showPath = '{{ path('app_evenement_show', {'id': 'PLACEHOLDER'}) }}';
    const editPath = '{{ path('app_evenement_edit', {'id': 'PLACEHOLDER'}) }}';
    const reservationPath = '{{ path('app_reservation_new', {'evenement_id': 'PLACEHOLDER'}) }}';

    function searchEvenements(page = 1) {
        const searchTerm = searchInput.value;
        const category = categoryFilter.value === 'all' ? '' : categoryFilter.value;

        evenementsList.innerHTML = '<div class="col-12 text-center"><i class="fas fa-spinner fa-spin"></i> Chargement...</div>';

        $.ajax({
            url: '{{ path('app_evenement_search') }}',
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                search: searchTerm,
                category: category,
                page: page
            }),
            success: function(response) {
                evenementsList.innerHTML = '';
                if (response.results.length === 0) {
                    evenementsList.innerHTML = '<div class="col-12"><p class="text-center text-muted">Aucun événement trouvé.</p></div>';
                    return;
                }

                response.results.forEach(function(evenement) {
                    const imageSrc = evenement.image ? '/Uploads/evenements/' + evenement.image : defaultImage;
                    let buttons = `
                        <a href="${showPath.replace('PLACEHOLDER', evenement.id)}" class="btn btn-outline-primary">
                            <i class="fas fa-eye me-1"></i> Détails
                        </a>
                    `;
                    if (isAuthenticated && evenement.id_organisateur) {
                        if (userId === evenement.id_organisateur) {
                            buttons += `
                                <a href="${editPath.replace('PLACEHOLDER', evenement.id)}" class="btn btn-primary">
                                    <i class="fas fa-edit me-1"></i> Modifier
                                </a>
                            `;
                        } else {
                            buttons += `
                                <a href="${reservationPath.replace('PLACEHOLDER', evenement.id)}" class="btn btn-primary">
                                    <i class="fas fa-ticket-alt me-1"></i> Réserver
                                </a>
                            `;
                        }
                    }

                    evenementsList.innerHTML += `
                        <div class="col-md-4 mb-4 filterable-item ${evenement.category}">
                            <div class="card h-100">
                                <img src="${imageSrc}" class="card-img-top" alt="${evenement.nom_evenement}">
                                <div class="card-body">
                                    <span class="badge bg-primary mb-2">${evenement.category.charAt(0).toUpperCase() + evenement.category.slice(1)}</span>
                                    <h3 class="card-title">${evenement.nom_evenement.substring(0, 50)}${evenement.nom_evenement.length > 50 ? '...' : ''}</h3>
                                    <p class="card-text">${evenement.description.substring(0, 100)}${evenement.description.length > 100 ? '...' : ''}</p>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <small class="text-muted"><i class="fas fa-calendar-alt me-1"></i> ${evenement.date || 'Date non spécifiée'}</small>
                                        <small class="text-muted"><i class="fas fa-map-marker-alt me-1"></i> ${evenement.lieu || 'Non spécifié'}</small>
                                    </div>
                                </div>
                                <div class="card-footer bg-white border-0 d-flex justify-content-between">
                                    ${buttons}
                                </div>
                            </div>
                        </div>
                    `;
                });

                const paginationHtml = generatePagination(response);
                const existingPagination = document.querySelector('.d-flex.justify-content-center.mt-4');
                if (existingPagination) {
                    existingPagination.innerHTML = paginationHtml;
                } else {
                    const paginationContainer = document.createElement('div');
                    paginationContainer.className = 'd-flex justify-content-center mt-4';
                    paginationContainer.innerHTML = paginationHtml;
                    evenementsList.parentNode.appendChild(paginationContainer);
                }
            },
            error: function(xhr, status, error) {
                console.error('AJAX error:', status, error, xhr.responseText);
                evenementsList.innerHTML = '<div class="col-12"><p class="text-center text-danger">Erreur lors de la recherche des événements. Veuillez réessayer.</p></div>';
            }
        });
    }

    function generatePagination(response) {
        let html = '<nav aria-label="Page navigation"><ul class="pagination">';
        const totalPages = Math.ceil(response.totalItems / response.itemsPerPage);
        const currentPage = response.currentPage;

        if (currentPage > 1) {
            html += `<li class="page-item"><a class="page-link" href="#" data-page="${currentPage - 1}">Précédent</a></li>`;
        }

        for (let i = 1; i <= totalPages; i++) {
            html += `<li class="page-item ${i === currentPage ? 'active' : ''}"><a class="page-link" href="#" data-page="${i}">${i}</a></li>`;
        }

        if (currentPage < totalPages) {
            html += `<li class="page-item"><a class="page-link" href="#" data-page="${currentPage + 1}">Suivant</a></li>`;
        }

        html += '</ul></nav>';
        return html;
    }

    searchInput.addEventListener('input', () => searchEvenements());
    categoryFilter.addEventListener('change', () => searchEvenements());
    document.addEventListener('click', function(e) {
        if (e.target.matches('.page-link')) {
            e.preventDefault();
            const page = parseInt(e.target.getAttribute('data-page'));
            searchEvenements(page);
        }
    });

    // Delay initial search to reduce flicker
    setTimeout(() => searchEvenements(), 100);
});
</script>
{% endblock %}