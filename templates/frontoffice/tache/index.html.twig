{# templates/frontoffice/tache/index.html.twig #}
{% extends 'frontoffice/base.html.twig' %}

{% block title %}Tâches du Plan « {{ plan.titre }} » – EvenTopia{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
      .task-columns-container { display:flex; gap:1rem; }
      .task-column {
        flex:1; background:#f1f3f5; padding:1rem;
        border-radius:.5rem; min-height:400px;
      }
      .column-header { text-align:center; margin-bottom:.5rem; font-weight:bold; }
      .task-card { margin-bottom:.75rem; cursor:grab; }
      .task-card:active { cursor:grabbing; }
    </style>
{% endblock %}

{% block body %}
  <section class="plan-header">
    <div class="container">
      <h1 class="plan-title">Tâches du Plan « {{ plan.titre }} »</h1>
      <p class="plan-subtitle">Gérez les tâches associées à ce planning</p>
      <a href="{{ path('app_tache_new', {'id': plan.id}) }}" class="create-task-btn">
         <i class="bi bi-plus-circle me-2"></i> Ajouter une tâche
      </a>
    </div>
  </section>

  <div class="container my-4">
    <div class="task-columns-container">
      {% for statusLabel in ['En cours','Terminée','Annulée'] %}
        <div class="task-column" data-status="{{ statusLabel }}">
          <h3 class="column-header">{{ statusLabel }}</h3>

          {# Normal loop + nested if instead of inline filter #}
          {% for t in taches %}
            {% if t.statut == statusLabel %}
              <div class="task-card card" data-id="{{ t.id }}">
                <div class="card-body">
                  <h5 class="card-title">{{ t.titre }}</h5>
                  <p class="card-text">
                    {{ t.description|striptags|slice(0,80) }}
                    {% if t.description|length > 80 %}…{% endif %}
                  </p>
                  <p class="small">
                    <i class="bi bi-calendar-event"></i>
                    {{ t.date ? t.date|date('d/m/Y') : '–' }}
                    &nbsp;|&nbsp;
                    <i class="bi bi-clock"></i>
                    {{ t.dureeEstimee }} h
                  </p>
                  <div class="d-flex justify-content-between">
                    <a href="{{ path('app_tache_show', {'id': t.id}) }}"
                       class="btn btn-sm btn-outline-primary">Voir</a>
                    <a href="{{ path('app_tache_edit', {'id': t.id}) }}"
                       class="btn btn-sm btn-outline-secondary">Modifier</a>
                  </div>
                </div>
              </div>
            {% endif %}
          {% endfor %}
          
        </div>
      {% endfor %}
    </div>
  </div>
{% endblock %}

{% block javascripts %}
  {{ parent() }}
  <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.14.0/Sortable.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      document.querySelectorAll('.task-column').forEach(column => {
        new Sortable(column, {
          group: 'tasks',
          animation: 150,
          onEnd({ item, to }) {
            const id     = item.dataset.id;
            const status = to.dataset.status;

            fetch('/update_tache_status.php', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'Accept':       'application/json'
              },
              body: JSON.stringify({ id: id, statut: status })
            })
            .then(r => r.json())
            .then(json => {
              if (!json.success) {
                throw new Error(json.message || 'Échec de la mise à jour');
              }
            })
            .catch(err => {
              console.error('Erreur update:', err);
              alert('Impossible de mettre à jour le statut : ' + err.message);
              window.location.reload();
            });
          }
        });
      });
    });
  </script>
{% endblock %}
