{{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}
    <div class="mb-4">
        {{ form_label(form.titre, 'Title', {'label_attr': {'class': 'form-label fw-bold'}}) }}
        {{ form_widget(form.titre, {'attr': {'class': 'form-control form-control-lg', 'placeholder': 'Enter a catchy title', 'minlength': '5', 'maxlength': '100', 'required': 'required'}}) }}
        <div class="invalid-feedback">Please enter a title (5-100 characters).</div>
        {{ form_errors(form.titre, {'attr': {'class': 'text-danger'}}) }}
    </div>

    <div class="mb-4">
        {{ form_label(form.contenu, 'Content', {'label_attr': {'class': 'form-label fw-bold'}}) }}
        {{ form_widget(form.contenu, {'attr': {'class': 'form-control', 'rows': 8, 'placeholder': 'Write your post content here...', 'minlength': '20', 'required': 'required'}}) }}
        <div class="invalid-feedback">Please enter content (minimum 20 characters).</div>
        {{ form_errors(form.contenu, {'attr': {'class': 'text-danger'}}) }}
    </div>

    <div class="mb-4">
        {{ form_label(form.photos, 'Photos', {'label_attr': {'class': 'form-label fw-bold'}}) }}
        <div class="input-group">
            {{ form_widget(form.photos, {'attr': {'class': 'form-control', 'accept': 'image/*', 'multiple': 'multiple'}}) }}
            <label class="input-group-text" for="{{ form.photos.vars.id }}">
                <i class="bi bi-image"></i>
            </label>
        </div>
        <div class="form-text">You can upload multiple images (JPG, PNG, GIF). Max size: 5MB per image.</div>
        <div id="image-preview" class="mt-2 d-flex flex-wrap gap-2"></div>
        {{ form_errors(form.photos, {'attr': {'class': 'text-danger'}}) }}
    </div>

    <div class="d-grid gap-2">
        <button class="btn btn-primary btn-lg">{{ button_label|default('Save') }}</button>
    </div>
{{ form_end(form) }}

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Form validation
    const forms = document.querySelectorAll('.needs-validation');
    Array.from(forms).forEach(form => {
        form.addEventListener('submit', event => {
            if (!form.checkValidity()) {
                event.preventDefault();
                event.stopPropagation();
            }
            form.classList.add('was-validated');
        }, false);
    });

    // Image preview
    const imageInput = document.getElementById('{{ form.photos.vars.id }}');
    const imagePreview = document.getElementById('image-preview');
    
    if (imageInput) {
        imageInput.addEventListener('change', function() {
            imagePreview.innerHTML = '';
            
            if (this.files) {
                Array.from(this.files).forEach(file => {
                    if (file.type.startsWith('image/')) {
                        const reader = new FileReader();
                        reader.onload = function(e) {
                            const preview = document.createElement('div');
                            preview.className = 'position-relative';
                            preview.innerHTML = `
                                <img src="${e.target.result}" class="img-thumbnail" style="height: 100px; width: auto;">
                                <span class="position-absolute top-0 end-0 badge bg-danger rounded-circle p-1">
                                    <i class="bi bi-x"></i>
                                </span>
                            `;
                            imagePreview.appendChild(preview);
                        };
                        reader.readAsDataURL(file);
                    }
                });
            }
        });
    }
});
</script>
